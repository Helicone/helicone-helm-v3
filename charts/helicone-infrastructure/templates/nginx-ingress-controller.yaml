{{- if .Values.nginxIngressController.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.nginxIngressController.controller.serviceAccount.name }}
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "helicone.fullname" . }}-nginx-ingress
subjects:
  - kind: ServiceAccount
    name: {{ .Values.nginxIngressController.controller.serviceAccount.name }}
    namespace: {{ .Values.nginxIngressController.namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - ingress-controller-leader
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "helicone.fullname" . }}-nginx-ingress
subjects:
  - kind: ServiceAccount
    name: {{ .Values.nginxIngressController.controller.serviceAccount.name }}
    namespace: {{ .Values.nginxIngressController.namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-configuration
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
data:
  enable-cors: "true"
  cors-allow-methods: "PUT, GET, POST, OPTIONS"
  cors-allow-origin: "*"
  cors-allow-credentials: "true"

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: {{ .Values.nginxIngressController.controller.ingressClass.name }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
  {{- if .Values.nginxIngressController.controller.ingressClass.default }}
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  {{- end }}
spec:
  controller: {{ .Values.nginxIngressController.controller.ingressClass.controllerValue }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress-controller
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "helicone.selectorLabels" . | nindent 6 }}
      component: nginx-ingress-controller
  template:
    metadata:
      labels:
        {{- include "helicone.selectorLabels" . | nindent 8 }}
        component: nginx-ingress-controller
    spec:
      serviceAccountName: {{ .Values.nginxIngressController.controller.serviceAccount.name }}
      containers:
        - name: nginx-ingress-controller
          image: "{{ .Values.nginxIngressController.controller.image.repository }}:{{ .Values.nginxIngressController.controller.image.tag }}"
          imagePullPolicy: {{ .Values.nginxIngressController.controller.image.pullPolicy }}
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/{{ include "helicone.fullname" . }}-nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/{{ include "helicone.fullname" . }}-tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/{{ include "helicone.fullname" . }}-udp-services
            - --publish-service=$(POD_NAMESPACE)/{{ include "helicone.fullname" . }}-nginx-ingress-controller
            - --annotations-prefix=nginx.ingress.kubernetes.io
            {{- range .Values.nginxIngressController.controller.extraArgs }}
            - {{ . }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: webhook
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.nginxIngressController.controller.resources | nindent 12 }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helicone.fullname" . }}-nginx-ingress-controller
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.nginxIngressController.controller.service.annotations | nindent 4 }}
spec:
  type: {{ .Values.nginxIngressController.controller.service.type }}
  ports:
    - name: http
      port: {{ .Values.nginxIngressController.controller.service.ports.http }}
      protocol: TCP
      targetPort: http
    - name: https
      port: {{ .Values.nginxIngressController.controller.service.ports.https }}
      protocol: TCP
      targetPort: https
  selector:
    {{- include "helicone.selectorLabels" . | nindent 4 }}
    component: nginx-ingress-controller

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helicone.fullname" . }}-tcp-services
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helicone.fullname" . }}-udp-services
  namespace: {{ .Values.nginxIngressController.namespace }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
{{- end }} 