helicone:
  aiGateway:
    enabled: true
    image:
      repository: helicone/ai-gateway
      pullPolicy: IfNotPresent
      tag: "latest"
    replicaCount: 2

    # TODO: add canaries or blue-green
    # Rolling Update Deployment Strategy
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%

    # Progress deadline for deployments (in seconds)
    progressDeadlineSeconds: 90

    service:
      annotations: {}
      type: ClusterIP
      port: 8080
    ingress:
      enabled: false
      className: "nginx"
      annotations: {}
      hosts:
        - host: helicone.ai/ai-gateway
          paths:
            - path: /
              pathType: Prefix
      tls: []
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 512Mi

    # Health Probes Configuration
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    readinessProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 15
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1

    startupProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 20
      successThreshold: 1

    #TODO: remove
    secrets:
      dbUrl: "postgres://postgres:testpassword@localhost:54388/helicone_test"
      dbCert: ""

    config:
      telemetry:
        level: "info,ai_gateway=trace"
        format: "compact"
        exporter: stdout
        otlp-endpoint: "http://otel-collector.helicone-infrastructure.svc.cluster.local:4317/v1/metrics"

      helicone:
        features: all

      cache-store:
        type: redis
        host-url: "redis://localhost:6379"

      rate-limit-store:
        type: redis
        host-url: "redis://localhost:6379"

      deployment-target:
        type: cloud
